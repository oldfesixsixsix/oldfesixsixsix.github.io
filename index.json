[{"content":"","permalink":"https://oldfesixsixsix.github.io/posts/my-new-page4/","summary":"","title":"My New Page4"},{"content":"1. 搜尋引擎 預設 PaperMod 是用 Lunr.js。\n它會去讀 /index.json 來跑全文檢索。\nindex.json 的生成\n你需要在 config.toml 裡啟用 JSON 輸出：\n[outputs] home = [\u0026#34;HTML\u0026#34;, \u0026#34;RSS\u0026#34;, \u0026#34;JSON\u0026#34;] 這樣 Hugo build 的時候才會輸出 public/index.json。\n本地測試\nhugo server -D http://localhost:1313/index.json 要能打開，看到文章 JSON。\n2. PaperMod 搜尋機制 內建支援 Lunr.js 搜尋 但記得要打開 params 裡的 enableSearch\n你在 config.toml（或 hugo.toml）裡開啟：\n[params] enableSearch = true [params] 是 主題自訂參數。\n去讀取 /index.json，然後在前端跑全文檢索。\n3. 查看內建的 JS PaperMod 的搜尋功能不是靠 Hugo 自己魔法出現的，而是靠 主題本身內建的 JS + 模板。\nls themes/PaperMod/assets/js/ 新一點的 PaperMod repo 是 fastsearch.js\n這版 PaperMod 有搜尋頁 (search layout)，但不是「右上角放大鏡」的 popup 模式，而是 「跳轉到 /search 頁面」 的設計。\n也就是說：\nfastsearch.js 會在 /search/ 頁面啟動，從 index.json 拉全文索引。\ncat themes/PaperMod/layouts/partials/header.html | grep search header.html 裡的這段：\n$is_search := eq (site.GetPage .KeyName).Layout `search` \u0026lt;a href=\u0026#34;{{ .URL | absLangURL }}\u0026#34; ...\u0026gt; 表示導航列如果配置了一個「Search」menu item，它就會連到 /search。\n4. 新增搜尋頁 在 content/search/_index.md 建立搜尋頁：\nhugo new search/_index.md Content \u0026#34;/mnt/d/myblog/content/search/_index.md\u0026#34; created 編輯內容\n--- title: \u0026#34;Search\u0026#34; layout: \u0026#34;search\u0026#34; --- 在 config.toml（或 hugo.toml）加一個 menu 指向 /search：\n[[menu.main]] identifier = \u0026#34;search\u0026#34; name = \u0026#34;Search\u0026#34; url = \u0026#34;/search/\u0026#34; weight = 10 重新 hugo server -D → 你會在導覽列看到「Search」連結，點進去就是全文檢索頁。\n","permalink":"https://oldfesixsixsix.github.io/posts/my-new-page3/","summary":"\u003ch1 id=\"1-搜尋引擎\"\u003e1. 搜尋引擎\u003c/h1\u003e\n\u003cp\u003e預設 PaperMod 是用 Lunr.js。\u003c/p\u003e\n\u003cp\u003e它會去讀 /index.json 來跑全文檢索。\u003c/p\u003e\n\u003cp\u003eindex.json 的生成\u003c/p\u003e\n\u003cp\u003e你需要在 config.toml 裡啟用 JSON 輸出：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-toml\" data-lang=\"toml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e[\u003cspan style=\"color:#a6e22e\"\u003eoutputs\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003ehome\u003c/span\u003e = [\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;HTML\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;RSS\u0026#34;\u003c/span\u003e, \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;JSON\u0026#34;\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e這樣 Hugo build 的時候才會輸出 public/index.json。\u003c/p\u003e\n\u003cp\u003e本地測試\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo server -D\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003ehttp://localhost:1313/index.json 要能打開，看到文章 JSON。\u003c/p\u003e\n\u003ch1 id=\"2-papermod-搜尋機制\"\u003e2. PaperMod 搜尋機制\u003c/h1\u003e\n\u003cp\u003e內建支援 Lunr.js 搜尋 但記得要打開 params 裡的 enableSearch\u003c/p\u003e\n\u003cp\u003e你在 config.toml（或 hugo.toml）裡開啟：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-toml\" data-lang=\"toml\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e[\u003cspan style=\"color:#a6e22e\"\u003eparams\u003c/span\u003e]\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e  \u003cspan style=\"color:#a6e22e\"\u003eenableSearch\u003c/span\u003e = \u003cspan style=\"color:#66d9ef\"\u003etrue\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e[params] 是 主題自訂參數。\u003c/p\u003e\n\u003cp\u003e去讀取 /index.json，然後在前端跑全文檢索。\u003c/p\u003e\n\u003ch1 id=\"3-查看內建的-js\"\u003e3. 查看內建的 JS\u003c/h1\u003e\n\u003cp\u003ePaperMod 的搜尋功能不是靠 Hugo 自己魔法出現的，而是靠 主題本身內建的 JS + 模板。\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003els themes/PaperMod/assets/js/\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e新一點的 PaperMod repo 是 fastsearch.js\u003c/p\u003e","title":"Page3 - Hugo 新增搜尋頁"},{"content":"1. 產生新的 SSH Key 建議用比較新的 ed25519 演算法：\nssh-keygen -t ed25519 -C \u0026#34;your_email@example.com\u0026#34; -C 後面放你的 GitHub email（方便辨識，不影響功能）\n會問你要存哪裡，直接 Enter 就放在 ~/.ssh/id_ed25519\n2. 啟動 ssh-agent 並加 key eval \u0026#34;$(ssh-agent -s)\u0026#34; ssh-add ~/.ssh/id_ed25519 3. 把 Public Key 加到 GitHub 印出你的 public key：\ncat ~/.ssh/id_ed25519.pub 複製整串（從 ssh-ed25519 開頭到最後 email 結尾）。\n到 GitHub → Settings → SSH and GPG keys → New SSH key → 貼上。\n4. 測試連線 ssh -T git@github.com 第一次會問你是否信任 GitHub，輸入 yes。 正常會看到：\nHi your-username! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access. 5. 改用 SSH URL 拉專案 下次 clone/pull/push 用 SSH 格式：\ngit clone git@github.com:oldfesixsixsix/meta-key-vault.git ","permalink":"https://oldfesixsixsix.github.io/posts/my-new-page2/","summary":"\u003ch1 id=\"1-產生新的-ssh-key\"\u003e1. 產生新的 SSH Key\u003c/h1\u003e\n\u003cp\u003e建議用比較新的 ed25519 演算法：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-keygen -t ed25519 -C \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;your_email@example.com\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e-C 後面放你的 GitHub email（方便辨識，不影響功能）\u003c/p\u003e\n\u003cp\u003e會問你要存哪裡，直接 Enter 就放在 ~/.ssh/id_ed25519\u003c/p\u003e\n\u003ch1 id=\"2-啟動-ssh-agent-並加-key\"\u003e2. 啟動 ssh-agent 並加 key\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eeval \u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\u003cspan style=\"color:#66d9ef\"\u003e$(\u003c/span\u003essh-agent -s\u003cspan style=\"color:#66d9ef\"\u003e)\u003c/span\u003e\u003cspan style=\"color:#e6db74\"\u003e\u0026#34;\u003c/span\u003e\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh-add ~/.ssh/id_ed25519\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"3-把-public-key-加到-github\"\u003e3. 把 Public Key 加到 GitHub\u003c/h1\u003e\n\u003cp\u003e印出你的 public key：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ecat ~/.ssh/id_ed25519.pub\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e複製整串（從 ssh-ed25519 開頭到最後 email 結尾）。\u003c/p\u003e\n\u003cp\u003e到 GitHub → Settings → SSH and GPG keys → New SSH key → 貼上。\u003c/p\u003e\n\u003ch1 id=\"4-測試連線\"\u003e4. 測試連線\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003essh -T git@github.com\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e第一次會問你是否信任 GitHub，輸入 yes。\n正常會看到：\u003c/p\u003e\n\u003cpre tabindex=\"0\"\u003e\u003ccode\u003eHi your-username! You\u0026#39;ve successfully authenticated, but GitHub does not provide shell access.\n\u003c/code\u003e\u003c/pre\u003e\u003ch1 id=\"5-改用-ssh-url-拉專案\"\u003e5. 改用 SSH URL 拉專案\u003c/h1\u003e\n\u003cp\u003e下次 clone/pull/push 用 SSH 格式：\u003c/p\u003e","title":"Page2 - Git set SSH Key"},{"content":"1. 下載官方 .deb（建議） 去 Hugo release 下載最新 extended 版（一定要 extended，不然 SCSS 會炸）。 例如：\nwget https://github.com/gohugoio/hugo/releases/download/v0.150.0/hugo_extended_0.156.0_Linux-64bit.tar.gz HTTP request sent, awaiting response... 404 Not Found 2025-09-16 22:38:37 ERROR 404: Not Found. sudo dpkg -i hugo_extended_0.139.0_linux-amd64.deb 下載 v0.150.0 Extended 版本\n前往 Hugo Releases 頁面 ，並下載適用於 Linux 的 Extended 版本。 https://github.com/gohugoio/hugo/releases/tag/v0.150.0\n安裝 Hugo\n在你的 WSL 環境中，執行以下命令來安裝 Hugo：\ntar -xzf hugo_extended_0.150.0_Linux-64bit.tar.gz sudo mv hugo /usr/local/bin/hugo 安裝後檢查：\nhugo version 2. 寫第一篇文章 hugo new posts/hello-world.md 會在 content/posts/ 底下生出一個 md 檔。 draft: true → 改成 false 才會顯示。\n本地預覽\nhugo server -D 3. 先 build Hugo 網站 假設你的 Hugo 專案在 myblog/：\ncd myblog hugo -D 會在 myblog/public/ 生成靜態檔。\n-D 表示 draft 也生成。\n將 public/ 推到 GitHub Pages 方法 A：單 repo (username.github.io)\nRepo 名稱必須是 username.github.io。\npublic/ 裡面所有檔案直接推到 main branch。\nGitHub Pages 會自動啟用，網址就是 https://username.github.io/。\n4. 用 Hugo 產生新頁面（content page） 假設你想新增一篇文章在 posts：\nhugo new posts/my-new-page.md 內容大概是： --- title: \u0026#34;My New Page\u0026#34; date: 2025-09-16T22:00:00+08:00 draft: true --- draft: true → Hugo 不會 build 到 public\n想上線就改成 draft: false 或 hugo -D build\n5. 啟用 GitHub Pages 打開你的 repo → Settings → Pages\nSource 選 branch（main 或 gh-pages）\n6. 頁面訪問異常 因為我剛切換路徑（gh-pages branch） 訪問剛發佈的 https://example.org/posts/my-new-page1/ 時候顯示以下錯誤訊息\nExample Domain This domain is for use in illustrative examples in documents. You may use this domain in literature without prior coordination or asking for permission. More information... 代表你 baseURL 是 https://example.org/\n根目錄找一下： 直接拉 theme 的範例可能會不是config.toml 會是其他名稱 我是 hugo.toml\n如果真沒有，自己建一個 config.toml 在專案根目錄：\nbaseURL = \u0026#34;https://username.github.io/myblog/\u0026#34; # 沒有 /myblog/ 就自己拿掉這個路徑 languageCode = \u0026#34;en-us\u0026#34; title = \u0026#34;My Blog\u0026#34; theme = \u0026#34;PaperMod\u0026#34; 7. 部署步驟 wsl /mnt/d/$ cd myblog/ /mnt/d/myblog$ cd content/posts/ /mnt/d/myblog/content/posts$ nano my-new-page1.md /mnt/d/myblog/content/posts$ cp -a /mnt/d/myblog/public/. /mnt/d/username.github.io/ # . 在最後面很重要，表示把 public/ 裡所有檔案和資料夾都複製到目標資料夾，而不會多一層 public/ # 避免漏掉子資料夾或檔案 /mnt/d/myblog/content/posts$ cd /mnt/d/myblog/ /mnt/d/myblog$ hugo -D 因為我在wsl加ssh所以切過來這推\n/mnt/d/username.github.io$ 推到分支更新 GitHub Pages\ngit add . git commit -m \u0026#34;deploy hugo site\u0026#34; git branch -M gh-pages git remote add origin git@github.com:username/myblog.git git push -f origin gh-pages ","permalink":"https://oldfesixsixsix.github.io/posts/my-new-page1/","summary":"\u003ch1 id=\"1-下載官方-deb建議\"\u003e1. 下載官方 .deb（建議）\u003c/h1\u003e\n\u003cp\u003e去 Hugo release\n下載最新 extended 版（一定要 extended，不然 SCSS 會炸）。\n例如：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ewget https://github.com/gohugoio/hugo/releases/download/v0.150.0/hugo_extended_0.156.0_Linux-64bit.tar.gz\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003eHTTP request sent, awaiting response... \u003cspan style=\"color:#ae81ff\"\u003e404\u003c/span\u003e Not Found\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003e2025-09-16 22:38:37 ERROR 404: Not Found.\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo dpkg -i hugo_extended_0.139.0_linux-amd64.deb\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e下載 v0.150.0 Extended 版本\u003c/p\u003e\n\u003cp\u003e前往 Hugo Releases 頁面\n，並下載適用於 Linux 的 Extended 版本。\n\u003ca href=\"https://github.com/gohugoio/hugo/releases/tag/v0.150.0\"\u003ehttps://github.com/gohugoio/hugo/releases/tag/v0.150.0\u003c/a\u003e\u003c/p\u003e\n\u003cp\u003e安裝 Hugo\u003c/p\u003e\n\u003cp\u003e在你的 WSL 環境中，執行以下命令來安裝 Hugo：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003etar -xzf hugo_extended_0.150.0_Linux-64bit.tar.gz\n\u003c/span\u003e\u003c/span\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003esudo mv hugo /usr/local/bin/hugo\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e安裝後檢查：\u003c/p\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo version\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003ch1 id=\"2-寫第一篇文章\"\u003e2. 寫第一篇文章\u003c/h1\u003e\n\u003cdiv class=\"highlight\"\u003e\u003cpre tabindex=\"0\" style=\"color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;\"\u003e\u003ccode class=\"language-bash\" data-lang=\"bash\"\u003e\u003cspan style=\"display:flex;\"\u003e\u003cspan\u003ehugo new posts/hello-world.md\n\u003c/span\u003e\u003c/span\u003e\u003c/code\u003e\u003c/pre\u003e\u003c/div\u003e\u003cp\u003e會在 content/posts/ 底下生出一個 md 檔。\ndraft: true → 改成 false 才會顯示。\u003c/p\u003e","title":"Page1 - Hugo + GitHub Pages"},{"content":"","permalink":"https://oldfesixsixsix.github.io/posts/hello-world/","summary":"","title":"Hello World"}]